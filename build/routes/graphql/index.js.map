{"version":3,"sources":["../../../server/routes/graphql/index.js"],"names":["router","Router","schema","typeDefs","resolvers","helperMiddleware","json","formatError","message","error","use","context","request","models","env","endpointURL"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;AAKA;;;;AAEA;;;;AAEA;;;;;;AAPA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;;AAEA;;AAEA;;;AAGA;AACA,IAAMC,SAAS,wCAAqB;AAClCC,2BADkC;AAElCC;AAFkC,CAArB,CAAf;;AAKA,IAAMC,mBAAmB,CACvB,kBAAQC,IAAR,EADuB,EAEvB,8CAFuB,CAAzB;;AAKA,IAAMC,cAAc,SAAdA,WAAc;AAAA,SAAU;AAC5BC,aAASC,MAAMD;AADa,GAAV;AAAA,CAApB;;AAIAR,OAAOU,GAAP,gBAAW,UAAX,SAA0BL,gBAA1B,GAA4C,yCAAe;AAAA,SAAY;AACrEH,kBADqE;AAErEK,4BAFqE;AAGrEI,aAAS;AACPC,sBADO;AAEPC;AAFO;AAH4D,GAAZ;AAAA,CAAf,CAA5C;;AASA,IAAI,iBAAOC,GAAP,KAAe,aAAnB,EAAkC;AAChCd,SAAOU,GAAP,CAAW,WAAX,EAAwB,0CAAgB,EAAEK,aAAa,UAAf,EAAhB,CAAxB;AACD;;kBAEcf,M","file":"index.js","sourcesContent":["'use strict';\n\nimport express from 'express';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport { makeExecutableSchema } from 'graphql-tools';\nimport config from '../../config';\nimport { apolloUploadExpress } from 'apollo-upload-server';\n\nconst router = express.Router();\n\n// Mongo dB models\nimport models from './models';\n// GraphQl Types\nimport typeDefs from './types';\n// Resolvers\nimport resolvers from './resolvers';\n\n// settings\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n});\n\nconst helperMiddleware = [\n  express.json(),\n  apolloUploadExpress(),\n];\n\nconst formatError = error => ({\n  message: error.message,\n});\n\nrouter.use('/graphql', ...helperMiddleware, graphqlExpress(request => ({\n  schema,\n  formatError,\n  context: {\n    request,\n    models\n  }\n})));\n\nif (config.env === 'development') {\n  router.use('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\n}\n\nexport default router;\n"]}