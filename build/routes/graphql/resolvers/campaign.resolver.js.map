{"version":3,"sources":["../../../../server/routes/graphql/resolvers/campaign.resolver.js"],"names":["quantity","campaignId","models","createCouponsRecursively","addCouponsToCampaign","maxQuantity","code","randomBytes","toString","coupon","status","createdAt","Date","updatedAt","campaign","Coupon","newCoupon","save","Campaign","findByIdAndUpdate","_id","new","Error","message","makerId","officeId","Company","findOne","maker","company","Office","office","getOffice","allCampaigns","parent","context","limit","skip","sortField","sortDirection","request","sortObject","authentication","headers","hunterId","Hunter","populate","hunter","find","coupons","mycampaigns","numberOfHuntedCoupons","getCampaignsWithHuntedCoupons","count","total","sort","campaigns","campaignsWithDetails","addCouponsHuntedByMe","returnObject","totalCount","myCampaigns","args","verify","secrets","session","addCampaign","input","validateRange","couponsNumber","totalCoupons","upload","stream","filename","path","v2","uploader","error","result","image","url","unlinkSync","newCampaign","updateRelatedModels","campaignUpdated","remove","updateCampaign","id","updatedCampaign","deleteCampaign","huntedCoupons","deleted","getCampaign","getCouponsFromCampaign","exec","getHuntersByCampaign","match","hunters","map","item","campaignsByMakerId","endAt","startAt","addCampaignToOffice","addCampaignsToMaker","Maker","findHuntedCampaign","mycampaign","hunterCoupons","data","i","length","mycoupons","intersectionBy","isMyCampaign","couponsHuntedByMe","push","params","promiseCampaignToOffice","promiseCampaignsToMaker","Promise","all"],"mappings":"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","file":"campaign.resolver.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport fs from 'fs';\nimport cloudinary from 'cloudinary';\nimport config from '../../../config';\nimport crypto from 'crypto';\nimport _ from 'lodash'\nimport { extractUserIdFromToken } from '../../../services/model.service';\nimport { storeFile } from './file.resolver';\n\nexport const allCampaigns = async (parent, {\n                                            limit = 10,\n                                            skip = 0,\n                                            sortField = 'createdAt',\n                                            sortDirection = 1\n                                          }, context) => {\n  const { models, request } = context;\n\n  const sortObject = {};\n  sortObject[sortField] = sortDirection;\n  const { headers: { authentication } } = request;\n  const hunterId = await extractUserIdFromToken(authentication);\n\n  const hunter = await models.Hunter\n    .findOne({_id: hunterId})\n    .populate('coupons')\n\n  const mycampaigns = await models.Campaign\n    .find({\n      coupons: { '$in': hunter.coupons }\n    })\n    .populate('coupons')\n\n  const numberOfHuntedCoupons = getCampaignsWithHuntedCoupons(mycampaigns, hunter.coupons);\n\n  const total = await models.Campaign.count({});\n\n  const campaigns = await models.Campaign.find({})\n    .limit(limit)\n    .skip(skip)\n    .sort(sortObject)\n    .populate('coupons')\n    .populate('maker');\n\n  const campaignsWithDetails = addCouponsHuntedByMe(campaigns, mycampaigns, numberOfHuntedCoupons)\n\n  const returnObject = {\n    campaigns: campaignsWithDetails,\n    totalCount: total\n  }\n  return returnObject;\n};\n\nexport const myCampaigns = async (parent, args, { models, request }) => {\n  const { headers: { authentication } } = request;\n  if (!authentication) throw new Error('You need logged to get campaigns');\n\n  const { _id } = await jwt.verify(authentication, config.secrets.session);\n  const campaigns = await models.Campaign.find({ maker: _id },  '-coupons')\n    .populate('office');\n\n  return campaigns;\n};\n\n// TODO: Actualizar el estado (status) de la campaña acorde a las necesidades\nexport const addCampaign = async (parent, args, context) => {\n  const { models, request } = context;\n  const { input } = args;\n  const { headers: { authentication } } = request;\n  validateRange(input);\n  const makerId = await extractUserIdFromToken(authentication);\n  const office = await getOffice(makerId, input.officeId, models);\n  if (!office) {\n    throw Error('Invalid office Id');\n  }\n\n  const { couponsNumber } = input;\n  const campaign = {\n    ...input,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    totalCoupons: couponsNumber,\n    maker: makerId,\n    office: office._id\n  }\n\n  if(campaign.upload){\n    const { stream, filename } = await campaign.upload;\n    const { path } = await storeFile({ stream, filename });\n    await cloudinary.v2.uploader.upload(path, (error, result) => {\n      if (result) {\n        campaign.image = result.url;\n        fs.unlinkSync(path);\n      } else if (error) {\n        return error;\n      }\n    });\n  }\n\n  const newCampaign = await new models.Campaign(campaign);\n\n  try {\n    await newCampaign.save();\n    const { _id: campaignId } = newCampaign;\n    await addCouponsToCampaign(couponsNumber, campaignId, models)\n    await updateRelatedModels({\n      officeId: office._id,\n      campaignId,\n      models,\n      makerId\n    });\n    const campaignUpdated = await models.Campaign\n      .findOne({ _id: campaignId },  '-coupons')\n      .populate('office');\n    return campaignUpdated;\n  } catch (error) {\n    newCampaign.remove();\n    throw new Error(error.message || error);\n  }\n}\n\nexport const updateCampaign = async (parent, args, context) => {\n  const { models } = context;\n  const { input } = args;\n\n  validateRange(input);\n\n  try {\n    const campaign = {\n      ...input,\n      updatedAt: new Date()\n    }\n    const updatedCampaign = await models.Campaign.findByIdAndUpdate(input.id,\n      campaign,\n      { new: true }\n    )\n    return updatedCampaign;\n  } catch (error) {\n    throw new Error(error.message || error);\n  }\n}\n\nexport const deleteCampaign = async (parent, args, context) => {\n  const { models } = context;\n  const { input: { id } } = args;\n\n  try {\n\n    const campaign = await models.Campaign.findOne({ _id: id });\n\n    if (campaign.huntedCoupons == 0) {\n      const updatedCampaign = await models.Campaign.findByIdAndUpdate(id, {\n        deleted: true,\n        updatedAt: new Date()\n      }, { new: true });\n\n      return updatedCampaign;\n\n    } else {\n      throw new Error('This campaign can not be deleted because there are coupons hunted.');\n    }\n\n  } catch (error) {\n    throw new Error(error.message || error);\n  }\n}\n\nexport const getCampaign = async (parent, args, context) => {\n  const { id } = args;\n  const { models } = context;\n  try {\n    const campaign = await models.Campaign.findOne({ _id: id });\n    return campaign;\n  } catch (error) {\n    throw new Error(error.message || error);\n  }\n};\n\nexport const getCouponsFromCampaign = async (parent, args, context) => {\n  const { campaignId } = args;\n  const { models } = context;\n  try {\n    const { coupons } = await models.Campaign.findOne({ _id: campaignId })\n      .populate('coupons')\n      .exec();\n    return coupons;\n  } catch (error) {\n    throw new Error(error.message || error);\n  }\n};\n\nexport const getHuntersByCampaign = async (parent, args, context) => {\n  const { campaignId } = args;\n  const { models, request } = context;\n  const { headers: { authentication } } = request;\n  const makerId = await extractUserIdFromToken(authentication);\n\n  try {\n\n    const campaign = await models.Campaign.findOne({\n      _id: campaignId,\n      maker: makerId\n    }).populate({\n      path: 'coupons',\n      match: {\n        hunter: {'$exists': true}\n      }\n    });\n\n    const coupons = await models.Coupon.find({\n      _id: { '$in': campaign.coupons }\n    })\n    .populate('hunter')\n\n    const hunters = coupons.map(item => item.hunter)\n\n    return hunters;\n  } catch (error) {\n    throw new Error(error.message || error);\n  }\n};\n\nexport const campaignsByMakerId = async(parent, { makerId }, { models }) => {\n  try {\n    const campaigns = await models.Campaign.find({ maker: makerId }, '-coupons');\n    return campaigns;\n  } catch (error) {\n    throw new Error('Maker id not exist');\n  }\n}\n\nfunction validateRange(input) {\n  if (input.endAt <= input.startAt) {\n    throw new Error('endAt should be greater than startAt.');\n  }\n  return\n}\n\nasync function addCouponsToCampaign(quantity, campaignId, models) {\n  await createCouponsRecursively(quantity, models, campaignId);\n}\n\nasync function createCouponsRecursively(maxQuantity, models, campaignId) {\n  if (maxQuantity > 0) {\n    const code = crypto.randomBytes(10).toString('hex')\n    const coupon = {\n      code,\n      status: 'available',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      campaign: campaignId\n    }\n    try {\n      const newCoupon = await new models.Coupon(coupon);\n      await newCoupon.save();\n\n      await models.Campaign.findByIdAndUpdate(campaignId,\n        {\n          '$push': { 'coupons': newCoupon._id },\n          updatedAt: new Date()\n        },\n        { new: true }\n      );\n\n      maxQuantity = maxQuantity - 1;\n      await createCouponsRecursively(maxQuantity, models, campaignId);\n\n    } catch (error) {\n      throw new Error(error.message || error);\n    }\n  }\n}\n\nasync function getOffice(makerId, officeId, models) {\n  const company = await models.Company.findOne({ maker: makerId });\n  const office = await models.Office.findOne({\n    _id: officeId,\n    company: company._id\n  });\n  return office;\n}\n\nfunction addCampaignToOffice(officeId, campaignId, models) {\n  return models.Office.findByIdAndUpdate(officeId,\n    {\n      '$push': { 'campaigns': campaignId },\n      updatedAt: new Date()\n    },\n    { new: true }\n  );\n}\n\nfunction addCampaignsToMaker(makerId, campaignId, models){\n  return models.Maker.findByIdAndUpdate(makerId,\n    {\n      '$push': { 'campaigns': campaignId },\n      updatedAt: new Date()\n    },\n    { new: true }\n  );\n}\n\nfunction findHuntedCampaign(campaignId, mycampaigns) {\n  return mycampaigns.find(mycampaign => {\n    return mycampaign.id === campaignId;\n  });\n}\n\nfunction getCampaignsWithHuntedCoupons(mycampaigns, hunterCoupons) {\n  let data = {};\n  for(let i = 0; i < mycampaigns.length; i++) {\n    const campaign = mycampaigns[i];\n    const mycoupons = _.intersectionBy(campaign.coupons, hunterCoupons, 'id');\n    data[campaign.id] = mycoupons.length;\n  }\n  return data;\n}\n\nfunction addCouponsHuntedByMe(campaigns, mycampaigns, numberOfHuntedCoupons) {\n  let result = [];\n  for (let i = 0; i < campaigns.length; i++) {\n    let campaign = campaigns[i];\n    const isMyCampaign = findHuntedCampaign(campaign.id, mycampaigns);\n    if (isMyCampaign) {\n      campaign.couponsHuntedByMe =  numberOfHuntedCoupons[campaign.id];\n    } else {\n      campaign.couponsHuntedByMe = 0;\n    }\n    result.push(campaign);\n  }\n  return result;\n}\n\nfunction updateRelatedModels(params) {\n  const {\n    officeId,\n    campaignId,\n    models,\n    makerId\n  } = params;\n  const promiseCampaignToOffice = addCampaignToOffice(officeId, campaignId, models)\n  const promiseCampaignsToMaker = addCampaignsToMaker(makerId, campaignId, models)\n  return Promise.all([promiseCampaignToOffice, promiseCampaignsToMaker])\n}\n"]}