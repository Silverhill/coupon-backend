{"version":3,"sources":["../../../../server/routes/graphql/scalars/timestamp.scalar.js"],"names":["timestampScalar","name","description","parseValue","value","Date","serialize","getTime","parseLiteral","ast","kind","INT","timestamp","parseInt","valid"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,IAAMA,4CAAkB,+BAAsB;AACnDC,QAAM,WAD6C;AAEnDC,eAAa,EAFsC;AAGnDC,YAHmD,sBAGxCC,KAHwC,EAGjC;AAChB,WAAO,IAAIC,IAAJ,CAASD,KAAT,CAAP;AACD,GALkD;AAMnDE,WANmD,qBAMzCF,KANyC,EAMlC;AACf,WAAOA,MAAMG,OAAN,EAAP;AACD,GARkD;AASnDC,cATmD,wBAStCC,GATsC,EASjC;AAChB,QAAIA,IAAIC,IAAJ,KAAa,eAAKC,GAAtB,EAA2B;AACzB,UAAMC,YAAYC,SAASJ,IAAIL,KAAb,EAAoB,EAApB,CAAlB;AACA,UAAMU,QAAS,IAAIT,IAAJ,CAASO,SAAT,CAAD,CAAsBL,OAAtB,KAAkC,CAAhD;AACA,aAAOO,QAAQF,SAAR,GAAoB,IAA3B;AACD;AACD,WAAO,IAAP;AACD;AAhBkD,CAAtB,CAAxB","file":"timestamp.scalar.js","sourcesContent":["import { GraphQLScalarType } from 'graphql';\nimport { Kind } from 'graphql/language';\n\nexport const timestampScalar = new GraphQLScalarType({\n  name: 'Timestamp',\n  description: '',\n  parseValue(value) {\n    return new Date(value);\n  },\n  serialize(value) {\n    return value.getTime();\n  },\n  parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      const timestamp = parseInt(ast.value, 10);\n      const valid = (new Date(timestamp)).getTime() > 0;\n      return valid ? timestamp : null;\n    }\n    return null;\n  }\n});\n"]}