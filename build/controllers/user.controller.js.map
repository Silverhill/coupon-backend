{"version":3,"sources":["../../server/controllers/user.controller.js"],"names":["index","create","show","destroy","changePassword","me","authCallback","common","handleError","res","statusCode","err","status","send","req","find","exec","then","json","users","catch","newUser","body","provider","role","save","user","token","sign","_id","secrets","session","expiresIn","validationError","next","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","findOne","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport User from '../models/user.model';\nimport config from '../config';\nimport jwt from 'jsonwebtoken';\nimport * as common from '../services/common.service';\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.role = 'hunter';\n  newUser.save()\n    .then(function(user) {\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(common.validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(common.validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"]}